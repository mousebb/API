box: golang

services:
    - id: mariadb
      env:
        MYSQL_ROOT_PASSWORD: mypassword
        MYSQL_DATABASE: CurtData

    - id: mongo

    - id: elasticsearch

build:
  steps:
    - setup-go-workspace

    - script:
        name: env
        code: env

    # Gets the dependencies
    - script:
        name: go get
        code: |
            go get -v github.com/golang/lint/golint
            go get -v github.com/mattn/goveralls
            go get -d -t -v ./...

    # Build the project
    - script:
        name: go build
        code: |
            go build -v -o API

    # Test the project
    - script:
        name: go test ./...
        code: |
            go test -v ./models/video/...
            go test -v ./models/cartIntegration/...
            go test -v ./models/lifestyle/...
            go test -v ./models/search/...
            go test -v ./models/showcase/...
            go test -v ./models/testimonials/...
            go test -v ./models/vehicle/...
            go test -v ./models/video/...
            go vet ./...
            # golint ./...

    # Test coverage for the project
    # - script:
    #    name: Coveralls.io
    #    code: |-
    #        # The COVERALLS_TOKEN is set in the project at
    #        # wercker as project environment variable.
    #        go get github.com/mattn/goveralls
    #        goveralls -package="./..." -service='wercker.com' -repotoken=$COVERALLS_TOKEN

deploy:
    steps:
        - internal/docker-push:
            username: _token
            password: $GCR_JSON_KEY_FILE
            repository: gcr.io/$GCLOUD_PROJECT/$DOCKER_IMAGE
            registry: https://gcr.io
            entrypoint: "./API"
            tag: $WERCKER_GIT_COMMIT
            ports: "8080"
